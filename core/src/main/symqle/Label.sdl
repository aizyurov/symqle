#############################################################################
#
#   Copyright 2010-2013 Alexander Izyurov
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.package org.symqle.common;
#
##############################################################################

import org.symqle.common.MalformedStatementException;
import org.symqle.common.SqlBuilder;
import org.symqle.common.SqlContext;
import org.symqle.common.StringSqlBuilder;

/**
 * Label can be used as SortKey.
 * Assign a label using {@link ValueExpression#label(Label)}.
 */
public class Label implements SortKey {

    private String labelName;
    private ValueExpression<?> labelOwner;

    final void setName(final ValueExpression<?> owner, final String name) {
        if (this.labelOwner != null && this.labelOwner != owner) {
            throw new MalformedStatementException("Label used twice: " + this);
        }
        this.labelOwner = owner;
        this.labelName = name;
    }

    /**
    * Creates an SqlBuilder representing SortKey.
    * @param context the SqlBuilder construction context
    * @return constructed SqlBuilder
    */
    @Override
    public final SqlBuilder z$sqlOfSortKey(final SqlContext context) {
        if (labelOwner == null) {
            throw new MalformedStatementException("Unassigned label: " + this);
        }
        return new StringSqlBuilder(labelName);
    }

}
