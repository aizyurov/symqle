public interface ScalarSubquery<T> extends Scalar<T> : Sql {}

<T> ScalarSubquery<T> ::= LEFT_PAREN qe:QueryExpressionScalar<T> RIGHT_PAREN ::
        implicit
        {
         public Sql z$create$ScalarSubquery(SqlContext context) {
            final SqlContext innerContext = createInnerContext(context);
            // learning
            innerContext.set(Dialect.class, DebugDialect.get());
            qe.z$create$QueryExpressionScalar(innerContext);
            // real Sql generation
            innerContext.set(Dialect.class, context.get(Dialect.class));
             final Sql base = qe.z$create$QueryExpressionScalar(innerContext);
             return context.get(Dialect.class).ScalarSubquery_is_LEFT_PAREN_QueryExpressionScalar_RIGHT_PAREN(base);
         }
}
;


# todo Row subqueries support