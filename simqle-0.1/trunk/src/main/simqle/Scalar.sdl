import java.sql.SQLException;
import org.simqle.Element;
public interface Scalar<T>
{
    T value(final Element element) throws SQLException;
}

::     private SqlContext createInnerContext(SqlContext context) {
        SqlContext innerContext = new SqlContext();
        innerContext.set(UniqueNameProvider.class, null);
        innerContext.set(Simqle.class, context.get(Simqle.class));
        // create an empty AbstractFromClause for QueryExpressionScalar with current FromClause as enclosing
        innerContext.set(TableRegistry.class, new SelectTableRegistry(context.get(TableRegistry.class)));
        return innerContext;
    }

::     private SqlContext createScalarInnerContext(SqlContext context) {
        SqlContext innerContext = new SqlContext();
        // if already in inner context, do not provide column labels
        innerContext.set(UniqueNameProvider.class, context.get(UniqueNameProvider.class) == null ? null :new ScalarNameProvider());
        innerContext.set(Simqle.class, context.get(Simqle.class));
        // create an empty AbstractFromClause with current FromClause as enclosing
        innerContext.set(TableRegistry.class, new SelectTableRegistry(context.get(TableRegistry.class)));
        return innerContext;
    }
