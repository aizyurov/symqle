(done another way: method map() for expressions) public ValueExpression<T> add(ValueExpression<?>, Term<?>, Mapper<T>);
mult, div, sum
Same for concat

(done) Rename plus -> add, minus -> sub

(discarded) Add access to DialectDataSource from Row (needed for collections) - no need, can pass DDS to Selector constructor

(done) Refactor DialectDataSource -> DatabaseGate - transaction suport! is DataSource enough?
Remove list(DataSource,...) ?

(done) Remove setIgnoreType: methods with Mapper will do

(d0ne) casts

(done) contains() for subquery

(done) refactor Pair - rename all methods and variables

LIMIT/OFFSET

(done) add ORDER BY for union/except/intersect (without parameter, there is only one column accessible via Context)

(done) fix orderAsc/orderDesc: remove literal "S0"

(done) map() for WhenClause*; rename methods (orWhen -> option ; orElse => otherwise)

(discard: can just useList<SetClause>) public SetList.append() to reuse the same code for insert and update

(done) collate clause

Symqle methods visibility. Package scope and public methods of Symqle become public in abstract classes. Protected methods make no sense - to be removed. 

rename booleanValue -> asPredicate

(done) ImplicitFromClause should be provided by the gate. Each subclass can specify what to do when context does not contain any table. For example, add new TableOrView("dual") or new TableOrView("(values (1))") to the context and continue, or just return ImplicitFromClause and wait for call to z$FromClauseFromNothing.
ImplicitFromClause should provide a hook for adding table (other logic is final!). Also, provide configurable allowNoTables and allowImplicitCrossJoins. If allowNoTables is false and there are no tables, an exception is thrown immediately. 

http://kobyleha.com/en/programming/java/how_to_build_skin_for_maven_2_site_plugin

sequences

ALL/ANY/SOME (future release)

return generated keys


