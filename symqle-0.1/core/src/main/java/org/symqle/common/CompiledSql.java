package org.symqle.common;

import java.sql.SQLException;

/**
 * An implementation of SQL, which constructs itself from SqlBuilder.
 * @author lvovich
 */
public class CompiledSql implements Sql {

    private String text;
    private Parameterizer parameterizer;

    /**
     * Constructs from SqlBuilder.
     * @param source the source
     */
    public CompiledSql(final SqlBuilder source) {
        final StringBuilder stringBuilder = new StringBuilder();
        source.appendTo(stringBuilder);
        this.text = stringBuilder.toString();
        this.parameterizer = source;
    }

    /**
     * The SQL text.
     * @return the text generated by SqlBuilder provided in the constructor.
     */
    public final String text() {
        return text;
    }

    /**
     * Provide values for dynamic parameters.
     * Delegates to source SqlBuilder.
     * @param p SqlParameters to write parameter values into
     * @throws java.sql.SQLException if jdbc driver cannot set parameters
     */
    @Override
    public final void setParameters(final SqlParameters p) throws SQLException {
        parameterizer.setParameters(p);
    }
}
