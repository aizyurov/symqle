public interface ScalarSubquery<T> extends Scalar<T> : Sql {}

<T> ScalarSubquery<T> ::= LEFT_PAREN qe:QueryExpressionBodyScalar<T> RIGHT_PAREN ::
        implicit
    {
       public Sql z$sqlOfScalarSubquery(SqlContext context) {
       final TableRegistry innerRegistry = new ChildSelectTableRegistry(context.get(TableRegistry.class));
       final SqlContext innerContext = context.newBuilder().
                put(UniqueNameProvider.class, null).
                put(TableRegistry.class, innerRegistry).toSqlContext();

         // learning
       qe.z$sqlOfQueryExpressionBodyScalar(makeLearningContext(innerContext));
       // real Sql generation
           final Sql base = qe.z$sqlOfQueryExpressionBodyScalar(innerContext);
           return context.get(Dialect.class).ScalarSubquery_is_LEFT_PAREN_QueryExpressionBodyScalar_RIGHT_PAREN(base);
    }
}
;


# todo Row subqueries support